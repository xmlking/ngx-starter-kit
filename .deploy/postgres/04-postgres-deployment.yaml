apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        runAsUser: 999
        fsGroup: 999
      containers:
        - name: postgres
          image: postgres:11
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres
            - configMapRef:
                name: postgres
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres", "-d", "postgres"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres", "-d", "postgres"]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          volumeMounts:
            - mountPath: /var/lib/postgresql/
              name: postgres-data-volume
            - mountPath: /docker-entrypoint-initdb.d/
              name: db-setup-scripts-volume
              readOnly: true
      volumes:
        - name: postgres-data-volume
          persistentVolumeClaim:
            claimName: postgres
        - name: db-setup-scripts-volume
          configMap:
            defaultMode: 0750
            name: postgres
            items:
              - key: db-setup-scripts.sh
                path: db-setup-scripts.sh
